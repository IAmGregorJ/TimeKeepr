<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:TimeKeepr.WPF.Styles">
    <!--colors-->
    <Color x:Key="ColorPrimary1">#9ddb75</Color>
    <Color x:Key="ColorPrimary2">#447025</Color>
    <Color x:Key="ColorPrimary3">#367ec6</Color>
    <Color x:Key="ColorPrimary4">#ffff33</Color>
    <Color x:Key="ColorPrimary5">#ff8333</Color>
    <Color x:Key="ColorPrimary6">#33abf2</Color>
    <Color x:Key="ColorPrimary7">#dd4cc0</Color>

    <!-- "Vejle" colors
        #9ddb75 green
        #ff646a magemta
        #33abf2 blue
        #ffff33 yellow
        #dd4cc0 pink
        #ff8333 orange
        #367ec6 dark blue
        #ff439a more pink
    -->

    <!--brushes-->
    <SolidColorBrush x:Key="BrushPrimary1" Color="{StaticResource ColorPrimary1}"/>
    <SolidColorBrush x:Key="BrushPrimary2" Color="{StaticResource ColorPrimary2}"/>
    <SolidColorBrush x:Key="BrushPrimary3" Color="{StaticResource ColorPrimary3}"/>
    <SolidColorBrush x:Key="BrushPrimary4" Color="{StaticResource ColorPrimary4}"/>
    <SolidColorBrush x:Key="BrushPrimary5" Color="{StaticResource ColorPrimary5}"/>
    <SolidColorBrush x:Key="BrushPrimary6" Color="{StaticResource ColorPrimary6}"/>
    <SolidColorBrush x:Key="BrushPrimary7" Color="{StaticResource ColorPrimary7}"/>

    <!--fonts-->
    <Style x:Key="title_font" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="FontSize" Value="25" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="10,0,0,5" />
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=BrushPrimary3}" />
    </Style>
    
    <Style x:Key="header_font" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="FontWeight" Value="bold" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    
    <Style x:Key="normal_font" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>


    <Style x:Key="label_font" TargetType="Label">
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style TargetType="DatePicker">
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="FontSize" Value="14" />
    </Style>


    <!--DataGrid-->
    <Style TargetType="DataGrid">
        <!-- Make the border and grid lines a little less imposing -->
        <Setter Property="BorderBrush" Value="#DDDDDD" />
        <Setter Property="HorizontalGridLinesBrush" Value="#DDDDDD" />
        <Setter Property="VerticalGridLinesBrush" Value="#DDDDDD" />
        <Setter Property="FontFamily" Value="Century Gothic" />

        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <!-- Highlight a grid row as the mouse passes over -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource BrushPrimary4}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <!-- Highlight selected rows -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource BrushPrimary4}" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{StaticResource BrushPrimary4}" />
                            <Setter Property="BorderBrush" Value="Black" />
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </Style.Triggers>
                    <!-- Add some padding around the contents of a cell -->
                    <Setter Property="Padding" Value="4,3,4,3" />
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="FontWeight" Value="Regular" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridCell">
                                <Border Padding="{TemplateBinding Padding}" 
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}">
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style TargetType="Control">
                                <Setter Property="BorderBrush" Value="Transparent" />
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
<!--METRO BUTTON-->
    <Style
        x:Key="ButtonFocusVisual">
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource BrushPrimary1}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10 5"/>
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                        <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="OpacityMask" Value="#AA888888"/>
                            <Setter Property="Margin" Value="2 1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderThickness" Value="0"/>
                            <!--<Setter Property="Background" Value="DimGray"/>-->
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--tabControl Styling-->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border Margin="-1.5,0,0,0">
                        <Grid Name="TabPanel">
                            <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="15,3"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="TabPanel" Property="Background" Value="white" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="TabPanel" Property="Background" Value="{StaticResource BrushPrimary1}" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                        <Trigger SourceName="ContentSite" Property="IsMouseOver" Value="True">
                            <Setter TargetName="TabPanel" Property="Background" Value="{StaticResource BrushPrimary4}" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MinButton" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Margin" Value="0,0,5,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="gridMainMin">
                        <Path x:Name="ButtonMin" Stretch="Uniform" UseLayoutRounding="False" Fill="{StaticResource BrushPrimary5}">
                            <Path.Data>
                                <EllipseGeometry RadiusX="1" RadiusY="1" />
                            </Path.Data>
                        </Path>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter Property="Width" Value="20" />
                            <Setter TargetName="ButtonMin" Property="Fill" Value="{StaticResource BrushPrimary5}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Width" Value="25" />
                            <Setter TargetName="ButtonMin" Property="Fill" Value="{StaticResource BrushPrimary4}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Width" Value="20" />
                            <Setter TargetName="ButtonMin" Property="Fill" Value="{StaticResource BrushPrimary5}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseButton" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Margin" Value="0,0,5,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="gridMainClose">
                        <Path x:Name="ButtonClose" Stretch="Uniform" UseLayoutRounding="False" Fill="{StaticResource BrushPrimary3}">
                            <Path.Data>
                                <EllipseGeometry RadiusX="1" RadiusY="1" />
                            </Path.Data>
                        </Path>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter Property="Width" Value="20" />
                            <Setter TargetName="ButtonClose" Property="Fill" Value="{StaticResource BrushPrimary3}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Width" Value="25" />
                            <Setter TargetName="ButtonClose" Property="Fill" Value="{StaticResource BrushPrimary6}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Width" Value="20" />
                            <Setter TargetName="ButtonClose" Property="Fill" Value="{StaticResource BrushPrimary3}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>